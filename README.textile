h1. Paddlesportsnorthamerica

This application was generated with the "rails_apps_composer":https://github.com/RailsApps/rails_apps_composer gem provided by the "RailsApps Project":http://railsapps.github.io/.

h2. Diagnostics

This application was built with recipes that are known to work together.

This application was built with preferences that are NOT known to work together.

If the application doesn't work as expected, please "report an issue":https://github.com/RailsApps/rails_apps_composer/issues and include these diagnostics:

We'd also like to know if you've found combinations of recipes or preferences that do work together.

Recipes:
["controllers", "core", "email", "extras", "frontend", "gems", "git", "init", "models", "prelaunch", "railsapps", "readme", "routes", "saas", "setup", "testing", "views"]

Preferences:
{:git=>true, :railsapps=>"none", :dev_webserver=>"thin", :prod_webserver=>"unicorn", :database=>"postgresql", :templates=>"erb", :unit_test=>"rspec", :integration=>"rspec-capybara", :continuous_testing=>"none", :fixtures=>"factory_girl", :frontend=>"none", :email=>"none", :authentication=>"none", :authorization=>"none", :form_builder=>"none", :starter_app=>"none", :rvmrc=>true, :quiet_assets=>true, :better_errors=>true, :ban_spiders=>true}

h2. Ruby on Rails

This application requires:

* Ruby version 1.9.3
* Rails version 3.2.12

Learn more about "Installing Rails":http://railsapps.github.io/installing-rails.html.

h2. Database

This application uses PostgreSQL with ActiveRecord.

h2. Development

* Template Engine: ERB
* Testing Framework: RSpec and Factory Girl
* Front-end Framework: None
* Form Builder: None
* Authentication: None
* Authorization: None

h2. Getting Started

Clone the repo to your local machine. Edit config/database.yml so that it refers to relevant Postgres databases
for the different evironments.

Note that right now (20170308) this is made available to the public via Heroku. Nothing in the code explicitly requires
that to be the case but it's worth keeping in mind.

h2. Deploying

We use Heroku's "Review App" feature and that has some implications for Github workflow. In a nutshell the process is as follows:

# Create a branch with a hopefully meaningful name and do whatever work you need to do
# Push that branch up to GITHUB and create a pull request
# Run over to Heroku and login as the PNA admin
# Select the pna-dev app
# Under Review Apps you will see that your just created PR is listed and Heroku is asking if you want to create an instance of the app from that PR (Hint: you do)
# Test and review and whatever you want on that app. New commits in the PR will require the app to be regenerated of course
# Approve and merge the PR into master
# Deploy master to the public pna dev site through the Heroku "Deploy" control panel
# If you are confident in the changes or are otherwise ready, deploy master to the pna-prod Heroku app through it's "Deploy"  control panel

h2. Documentation and Support

This is the only documentation.

h2. Contributing

If you make improvements to this application, please share with others.

* Fork the project on GitHub.
* Make your feature addition or bug fix.
* Commit with Git.
* Send the author a pull request.

If you add functionality to this application, create an alternative implementation, or build an application that is similar, please contact me and I'll add a note to the README so that others can find your work.
